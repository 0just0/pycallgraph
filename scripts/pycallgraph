#!/usr/bin/env python
"""
pycallgraph
This script is the command line interface to the pycallgraph Python library.

See http://pycallgraph.slowchop.com/ for more information.
"""
import sys
import os

from pycallgraph import Config
from pycallgraph import PyCallGraph
from pycallgraph import __version__
from pycallgraph import GlobbingFilter


config = Config()
config.parse_args()

if not config.quiet:
    print('Python Call Graph v%s' % __version__)

# Create filter
if not config.include:
    config.include = ['*']
filter_func = GlobbingFilter(
    include=config.include,
    exclude=config.exclude,
    max_depth=config.max_depth,
    )

# Create timing filter
if not config.include_timing:
    config.include_timing = ['*']
time_filter_func = GlobbingFilter(
    include=config.include_timing,
    exclude=config.exclude_timing,
    fraction=float(config.time_fraction_threshhold),
    )

# Insert the current working directory into the path so that
# XXX: Not sure why this is so
# sys.path.insert(0, os.getcwd())

if not config.quiet:
    print('Starting Python Call Graph trace')

pycg = PyCallGraph(config=config)
del config

pycallgraph.start_trace(
    filter_func=filter_func,
    time_filter_func=time_filter_func,
)

try:
    globals()['__file__'] = args[0]
    with open(args[0]) as file_:
        file_content = file_.read()
    exec(file_content)
except SystemExit:
    # Ignore it when the script calls os.exit() so we can still make the graph.
    pass

if not config.quiet:
    print('Creating %s' % config.output_file)

pycallgraph.make_dot_graph(config.output_file, config.format, config.tool)

if not config.quiet:
    print('Done!')

# vim:set shiftwidth=4 tabstop=4 expandtab textwidth=79:
